version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5440:5432"
    environment:
      - POSTGRES_DB=book_system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d book_system"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:3000
    volumes:
      - .:/code
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_DB=book_system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - my_network

  celery:
    build: .
    command: celery -A BookProject worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=book_system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - my_network

  celery-beat:
    build: .
    command: celery -A BookProject beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=book_system
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - my_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

networks:
  my_network:
    driver: bridge